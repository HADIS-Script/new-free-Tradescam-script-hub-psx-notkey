local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\251\116","\57\213\90\118"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,1,2 -1 ));return "";else local v92=0;local v93;while true do if (v92==0) then v93=v10(v8(v42,16));if v30 then local v121=0;local v122;while true do if (v121==0) then v122=v13(v93,v30);v30=nil;v121=1;end if (v121==1) then return v122;end end else return v93;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v94=0;local v95;while true do if (v94==0) then v95=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v95-(v95%1) ;end end else local v96=0;local v97;while true do if (v96==0) then v97=2^(v44-1) ;return (((v43%(v97 + v97))>=v97) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v49 * 256) + v48 ;end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end local function v35() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v54==2) then v59=v31(v56,21,31);v60=((v31(v56,91 -59 )==1) and  -1) or 1 ;v54=3;end if (v54==3) then if (v59==0) then if (v58==0) then return v60 * 0 ;else v59=1;v57=0;end elseif (v59==(3951 -1904)) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/((4 -2)^52))) ;end if (v54==0) then v55=v34();v56=v34();v54=1;end if (v54==1) then v57=1;v58=(v31(v56,1,20) * (2^32)) + v55 ;v54=2;end end end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==0) then v63=nil;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=1;end if (v62==2) then v64={};for v101=1, #v63 do v64[v101]=v10(v9(v11(v63,v101,v101)));end v62=3;end if (v62==1) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end if (v62==3) then return v14(v64);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65=0;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (v65==2) then for v103=1,v34() do local v104=v32();if (v31(v104,569 -(367 + 201) ,1)==0) then local v117=0;local v118;local v119;local v120;while true do if (v117==0) then v118=v31(v104,2,3);v119=v31(v104,4,6);v117=1;end if (3==v117) then if (v31(v119,3,3)==1) then v120[4]=v71[v120[4]];end v66[v103]=v120;break;end if (v117==1) then v120={v33(),v33(),nil,nil};if (v118==0) then local v127=0;while true do if (v127==0) then v120[930 -(214 + 713) ]=v33();v120[4]=v33();break;end end elseif (v118==1) then v120[3]=v34();elseif (v118==2) then v120[3]=v34() -(2^(5 + 11)) ;elseif (v118==(1 + 2)) then v120[3]=v34() -((879 -(282 + 595))^16) ;v120[4]=v33();end v117=2;end if (v117==2) then if (v31(v119,1,1)==1) then v120[2]=v71[v120[2]];end if (v31(v119,1639 -(1523 + 114) ,2)==1) then v120[3]=v71[v120[3 + 0 ]];end v117=3;end end end end for v105=1,v34() do v67[v105-1 ]=v39();end return v69;end if (v65==0) then v66={};v67={};v68={};v69={v66,v67,nil,v68};v65=1;end if (1==v65) then v70=v34();v71={};for v107=1,v70 do local v108=0;local v109;local v110;while true do if (v108==1) then if (v109==1) then v110=v32()~=(619 -(555 + 64)) ;elseif (v109==2) then v110=v35();elseif (v109==3) then v110=v36();end v71[v107]=v110;break;end if (v108==0) then v109=v32();v110=nil;v108=1;end end end v69[934 -(857 + 74) ]=v32();v65=2;end end end local function v40(v72,v73,v74) local v75=v72[1 -0 ];local v76=v72[2];local v77=v72[3];return function(...) local v78=v75;local v79=v76;local v80=v77;local v81=v38;local v82=1;local v83= -1;local v84={};local v85={...};local v86=v20("#",...) -1 ;local v87={};local v88={};for v98=0,v86 do if (v98>=v80) then v84[v98-v80 ]=v85[v98 + 1 ];else v88[v98]=v85[v98 + 1 ];end end local v89=(v86-v80) + 1 ;local v90;local v91;while true do local v99=0;while true do if (v99==1) then if (v91<=(1102 -(68 + 997))) then if (v91<=18) then if (v91<=8) then if (v91<=3) then if (v91<=1) then if (v91==0) then v88[v90[2]]=v88[v90[3]]%v88[v90[1274 -(226 + 1044) ]] ;elseif (v88[v90[2]]==v90[17 -13 ]) then v82=v82 + 1 ;else v82=v90[3];end elseif (v91>2) then if (v88[v90[2]]==v90[4]) then v82=v82 + 1 ;else v82=v90[120 -(32 + 85) ];end else v88[v90[2]]();end elseif (v91<=5) then if (v91==4) then v88[v90[2]]=v73[v90[3]];else local v141=v90[2];local v142=v88[v141];for v227=v141 + 1 + 0 ,v83 do v15(v142,v88[v227]);end end elseif (v91<=6) then local v143=0;local v144;while true do if (v143==0) then v144=v90[2];do return v21(v88,v144,v83);end break;end end elseif (v91>7) then if  not v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else local v234=0;local v235;while true do if (v234==0) then v235=v90[2];v88[v235](v21(v88,v235 + 1 ,v90[3]));break;end end end elseif (v91<=13) then if (v91<=10) then if (v91>9) then v88[v90[2]]=v73[v90[3]];else local v147=v90[2];do return v21(v88,v147,v83);end end elseif (v91<=11) then v88[v90[2]][v88[v90[3]]]=v88[v90[4]];elseif (v91>12) then local v236=0;local v237;local v238;local v239;local v240;while true do if (0==v236) then v237=v90[2];v238,v239=v81(v88[v237](v21(v88,v237 + 1 ,v90[3])));v236=1;end if (v236==2) then for v332=v237,v83 do local v333=0;while true do if (v333==0) then v240=v240 + 1 ;v88[v332]=v238[v240];break;end end end break;end if (v236==1) then v83=(v239 + v237) -1 ;v240=0;v236=2;end end else for v281=v90[2],v90[3] do v88[v281]=nil;end end elseif (v91<=15) then if (v91==14) then v88[v90[2]][v88[v90[3]]]=v90[4];else v88[v90[2]]=v88[v90[3]] + v90[4] ;end elseif (v91<=16) then local v153=0;local v154;local v155;local v156;local v157;while true do if (v153==2) then for v307=v154,v83 do v157=v157 + 1 ;v88[v307]=v155[v157];end break;end if (v153==0) then v154=v90[1 + 1 ];v155,v156=v81(v88[v154](v21(v88,v154 + 1 ,v83)));v153=1;end if (1==v153) then v83=(v156 + v154) -1 ;v157=0;v153=2;end end elseif (v91==17) then if v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end else v82=v90[3];end elseif (v91<=27) then if (v91<=22) then if (v91<=20) then if (v91>19) then local v158=v90[2];do return v88[v158](v21(v88,v158 + 1 ,v90[960 -(892 + 65) ]));end else v88[v90[2]]={};end elseif (v91==21) then do return v88[v90[4 -2 ]]();end else local v160=0;local v161;while true do if (v160==0) then v161=v90[2];v88[v161](v88[v161 + (1 -0) ]);break;end end end elseif (v91<=24) then if (v91>23) then local v162=0;local v163;while true do if (v162==0) then v163=v90[2];v88[v163]=v88[v163]();break;end end else local v164=0;local v165;while true do if (v164==0) then v165=v90[2];v88[v165]=v88[v165](v21(v88,v165 + 1 ,v83));break;end end end elseif (v91<=25) then do return;end elseif (v91>26) then v88[v90[2]]=v88[v90[3]] + v90[4] ;else local v243=0;local v244;local v245;local v246;while true do if (v243==2) then for v334=1,v90[7 -3 ] do local v335=0;local v336;while true do if (v335==0) then v82=v82 + 1 ;v336=v78[v82];v335=1;end if (1==v335) then if (v336[1]==68) then v246[v334-1 ]={v88,v336[3]};else v246[v334-1 ]={v73,v336[3]};end v87[ #v87 + 1 ]=v246;break;end end end v88[v90[2]]=v40(v244,v245,v74);break;end if (v243==1) then v246={};v245=v18({},{[v7("\114\100\39\186\82\5\85","\96\45\59\78\212\54")]=function(v337,v338) local v339=0;local v340;while true do if (v339==0) then v340=v246[v338];return v340[1][v340[2]];end end end,[v7("\47\105\141\142\145\39\163\244\21\78","\144\112\54\227\235\230\78\205")]=function(v341,v342,v343) local v344=v246[v342];v344[1][v344[2]]=v343;end});v243=2;end if (v243==0) then v244=v79[v90[3]];v245=nil;v243=1;end end end elseif (v91<=32) then if (v91<=29) then if (v91>28) then local v166=v90[2];local v167=v88[v166 + 2 ];local v168=v88[v166] + v167 ;v88[v166]=v168;if (v167>0) then if (v168<=v88[v166 + 1 ]) then local v311=0;while true do if (0==v311) then v82=v90[3];v88[v166 + 3 ]=v168;break;end end end elseif (v168>=v88[v166 + 1 ]) then local v312=0;while true do if (0==v312) then v82=v90[3];v88[v166 + 3 ]=v168;break;end end end else v88[v90[2]]=v90[3];end elseif (v91<=30) then v88[v90[2]]=v40(v79[v90[3]],nil,v74);elseif (v91==(381 -(87 + 263))) then v88[v90[2]]= #v88[v90[3]];else local v248=v90[2];local v249,v250=v81(v88[v248](v21(v88,v248 + (181 -(67 + 113)) ,v83)));v83=(v250 + v248) -1 ;local v251=0;for v289=v248,v83 do v251=v251 + 1 ;v88[v289]=v249[v251];end end elseif (v91<=34) then if (v91==33) then v88[v90[2]]();else local v173=v90[2];local v174,v175=v81(v88[v173](v21(v88,v173 + 1 + 0 ,v90[3])));v83=(v175 + v173) -1 ;local v176=0;for v228=v173,v83 do local v229=0;while true do if (v229==0) then v176=v176 + (2 -1) ;v88[v228]=v174[v176];break;end end end end elseif (v91<=35) then v88[v90[2]]=v90[3] + v88[v90[4]] ;elseif (v91==(27 + 9)) then local v252=0;local v253;local v254;local v255;local v256;while true do if (v252==2) then for v346=v253,v83 do local v347=0;while true do if (v347==0) then v256=v256 + (3 -2) ;v88[v346]=v254[v256];break;end end end break;end if (v252==0) then v253=v90[2];v254,v255=v81(v88[v253](v88[v253 + 1 ]));v252=1;end if (v252==1) then v83=(v255 + v253) -1 ;v256=0;v252=2;end end else local v257=v90[2];local v258=v88[v257 + 2 ];local v259=v88[v257] + v258 ;v88[v257]=v259;if (v258>0) then if (v259<=v88[v257 + 1 ]) then local v348=0;while true do if (v348==0) then v82=v90[955 -(802 + 150) ];v88[v257 + 3 ]=v259;break;end end end elseif (v259>=v88[v257 + 1 ]) then local v349=0;while true do if (0==v349) then v82=v90[3];v88[v257 + 3 ]=v259;break;end end end end elseif (v91<=(150 -94)) then if (v91<=46) then if (v91<=41) then if (v91<=39) then if (v91==38) then local v178=v90[2];v88[v178]=v88[v178]();else v88[v90[2]]=v88[v90[3]][v90[6 -2 ]];end elseif (v91==40) then local v182=v90[2];v88[v182](v88[v182 + 1 ]);else local v183=0;local v184;local v185;while true do if (v183==0) then v184=v90[2];v185=v88[v90[3]];v183=1;end if (v183==1) then v88[v184 + 1 ]=v185;v88[v184]=v185[v90[4]];break;end end end elseif (v91<=(32 + 11)) then if (v91>42) then for v230=v90[2],v90[3] do v88[v230]=nil;end else v88[v90[999 -(915 + 82) ]]=v88[v90[3]];end elseif (v91<=44) then local v188=v90[2];local v189=v88[v90[3]];v88[v188 + 1 ]=v189;v88[v188]=v189[v90[4]];elseif (v91==45) then v88[v90[2]]= #v88[v90[3]];else v88[v90[2]]=v88[v90[3]]%v90[4] ;end elseif (v91<=51) then if (v91<=48) then if (v91>47) then v88[v90[5 -3 ]]=v88[v90[3]]%v88[v90[4]] ;else do return;end end elseif (v91<=49) then v88[v90[2]]=v88[v90[2 + 1 ]][v90[4]];elseif (v91>50) then v88[v90[2]]=v74[v90[3]];elseif  not v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end elseif (v91<=53) then if (v91==52) then local v196=v90[2];v88[v196]=v88[v196](v21(v88,v196 + 1 ,v90[3]));else local v198=0;local v199;local v200;while true do if (1==v198) then for v316=v199 + 1 ,v83 do v15(v200,v88[v316]);end break;end if (0==v198) then v199=v90[2];v200=v88[v199];v198=1;end end end elseif (v91<=(70 -16)) then v88[v90[2]]=v88[v90[3]]%v90[4] ;elseif (v91==55) then v88[v90[2]]={};else local v266=0;local v267;while true do if (v266==0) then v267=v90[2];do return v88[v267](v21(v88,v267 + 1 ,v90[3]));end break;end end end elseif (v91<=65) then if (v91<=60) then if (v91<=58) then if (v91>57) then do return v88[v90[2]]();end else local v202=0;local v203;while true do if (v202==0) then v203=v90[1189 -(1069 + 118) ];v88[v203](v21(v88,v203 + (2 -1) ,v83));break;end end end elseif (v91==59) then v82=v90[3];else local v205=0;local v206;while true do if (v205==0) then v206=v90[3 -1 ];v88[v206]=v88[v206](v21(v88,v206 + 1 + 0 ,v83));break;end end end elseif (v91<=(109 -47)) then if (v91==61) then v88[v90[2]]=v74[v90[3]];else local v209=0;local v210;local v211;local v212;local v213;while true do if (v209==1) then v83=(v212 + v210) -1 ;v213=0;v209=2;end if (v209==2) then for v317=v210,v83 do local v318=0;while true do if (v318==0) then v213=v213 + 1 ;v88[v317]=v211[v213];break;end end end break;end if (v209==0) then v210=v90[2];v211,v212=v81(v88[v210](v88[v210 + 1 ]));v209=1;end end end elseif (v91<=63) then local v214=v90[2];v88[v214](v21(v88,v214 + 1 ,v83));elseif (v91>64) then v88[v90[2]]=v40(v79[v90[3]],nil,v74);else v88[v90[2]][v88[v90[3]]]=v90[4];end elseif (v91<=70) then if (v91<=67) then if (v91>66) then local v215=0;local v216;while true do if (v215==0) then v216=v90[2];v88[v216]=v88[v216](v21(v88,v216 + 1 ,v90[3]));break;end end else local v217=0;local v218;while true do if (v217==0) then v218=v90[2];v88[v218](v21(v88,v218 + 1 ,v90[3]));break;end end end elseif (v91<=(68 + 0)) then v88[v90[2]]=v88[v90[3]];elseif (v91>(860 -(368 + 423))) then local v271=0;local v272;local v273;local v274;while true do if (v271==2) then for v350=3 -2 ,v90[4] do v82=v82 + 1 ;local v351=v78[v82];if (v351[1]==68) then v274[v350-(19 -(10 + 8)) ]={v88,v351[3]};else v274[v350-1 ]={v73,v351[9 -6 ]};end v87[ #v87 + 1 ]=v274;end v88[v90[2]]=v40(v272,v273,v74);break;end if (v271==0) then v272=v79[v90[3]];v273=nil;v271=1;end if (v271==1) then v274={};v273=v18({},{[v7("\140\23\6\242\212\94\171","\59\211\72\111\156\176")]=function(v353,v354) local v355=0;local v356;while true do if (v355==0) then v356=v274[v354];return v356[1][v356[2]];end end end,[v7("\113\184\237\40\89\142\237\41\75\159","\77\46\231\131")]=function(v357,v358,v359) local v360=0;local v361;while true do if (v360==0) then v361=v274[v358];v361[1][v361[2]]=v359;break;end end end});v271=2;end end else v88[v90[2]]=v90[2 + 1 ];end elseif (v91<=72) then if (v91>71) then v88[v90[2]][v88[v90[3]]]=v88[v90[4]];else local v223=v90[2];local v224=v88[v223];local v225=v88[v223 + 2 ];if (v225>(0 -0)) then if (v224>v88[v223 + 1 ]) then v82=v90[3];else v88[v223 + 3 ]=v224;end elseif (v224<v88[v223 + 1 ]) then v82=v90[3];else v88[v223 + (441 -(145 + 293)) ]=v224;end end elseif (v91<=73) then v88[v90[2]]=v90[3] + v88[v90[4]] ;elseif (v91==74) then local v277=v90[2];local v278=v88[v277];local v279=v88[v277 + (432 -(44 + 386)) ];if (v279>0) then if (v278>v88[v277 + 1 ]) then v82=v90[3];else v88[v277 + 3 ]=v278;end elseif (v278<v88[v277 + 1 ]) then v82=v90[3];else v88[v277 + 3 ]=v278;end elseif v88[v90[2]] then v82=v82 + 1 ;else v82=v90[3];end v82=v82 + 1 ;break;end if (0==v99) then v90=v78[v82];v91=v90[1];v99=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- âڑ ï¸ڈ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.3) ~  Much Love, Ferib 

]]--
